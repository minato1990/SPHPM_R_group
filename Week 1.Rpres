
<style>


/* slide titles */
.reveal h3 { 
  font-size: 75px;
  color: black;
}

.small-code pre code {
  font-size: 1em;
}
.footer {
    color: red; background: #E8E8E8;
    position: fixed; top: 90%;
    text-align:left; width:100%;
}

</style>


R training
========================================================
font-family: 'Helvetica'

![Alt Text](https://78.media.tumblr.com/e1712952f6eb24f418a997a8da6ae831/tumblr_ou1znif6LW1w4t58uo1_500.gif)

   
<div style="color:white ;text-align: right"> Caroline Gao & Tyler Lane </div>


Welcome to the first SPHPM R Group Meeting!
========================================================
* Purpose: 
  - Create a community of R users
  - Provide some training
  - Tips on best practice




What stats packages do you currently use?
========================================================
* MS Excel 
  - My main stats software when I was a statistician in the UK govt!
* SPSS
* STATA
* SAS
* Python
* R
* Something else?


Why use R?
========================================================
class: small-code
* It's free!
  - Skill you can carry outside academia
* Extremely flexible
  - User-developed packages to do just about anything
* Vibrant, passionate, and supportive user community
* Built-in datasets to practice with
```{r, eval = FALSE}
# To see this, enter this code in your console
ls("package:datasets")
```


Pretty graphs
========================================================
class: small-code
```{r my plot, fig.width = 15, fig.height = 6}
# load necessary package
library(ggplot2) 
# convert target variable to factor with meaningful labels
mtcars$Transmission <- factor(mtcars$am, 
                       levels = c(0, 1), 
                       labels = c("Automatic", "Manual"))
# Plot
ggplot(mtcars, aes(x = mpg, fill = Transmission)) + 
  geom_density(alpha = 0.5) + 
  labs(title = "Fuel efficiency by transmission type", 
       x = "Miles per gallon", y = "Distribution") 
```





Disadvantages of R
========================================================
* Steep learning curve
* Less support than commercial software
* FRUSTRATING!
![Alt Text](https://alfahir.hu/sites/default/files/styles/szeles/public/indexfotos/2018-04/g-ucpo_0.gif?itok=zwB7bbTC)



My unsolicited advice
========================================================
* Learning R is opposite of learning a musical instrument
* Guitar: Learn scales, then Wonderwall
* R: Learn Wonderwall, then scales

![Alt Text](http://31.media.tumblr.com/tumblr_m8mm9zMnGo1qkyzquo1_500.gif)



Reproducibility
========================================================

![Alt Text](http://revolution-computing.typepad.com/.a/6a010534b1db25970b01bb0794c2fc970d-800wi) 

* Ignoring version control??
* Tracking package dependencies per project using packrat or checkpoint


Reproducibility
========================================================
Project management 
* Keep source data in zip file
* Store all data and analyses code on net drive 
* Documentations
* ...

Related to R
* Pay attention to random number generator
* Separate data cleaning code and analysis code
* Git version control
* ...



Reproducibility/Reusability
========================================================
class: small-code
Caroline's code from 10 years ago: 
```{ r,eval=FALSE}
particlechange<-c(50)
for( g in 1:30)
{
particlenum<-c(0)
particlereach1<-c(0)
##----------------
x<-seq(0.1,3,length=30)
y<-seq(0.1,6,length=30)
tcid<-c(1:60)##0.01 dilution
for(i in 0:60)
{
   if(i<10)
   tcid[i]=10^(4.25-0.81*(10-i)/10)/dilu
   else 
   tcid[i]=10^(4.25-0.81*(i-10)/10)/dilu
}
f<-function(x,y){
r<-1-exp(-4*1*0.001386*0.48*particlesum[x*10]*tcid[y*10]*1000000*0.001/(3*(x*0.2679+0.0098)^2))
}
z<-outer(x,y,f)
```

Reproducibility/Reusability
========================================================
class: small-code
Caroline's code now: 

```{r, eval=FALSE}
#Extract median, range and max PM2.5 for each SA2 areas
fire_area<-Ambo_timeseries %>%
    select(SA2_NAME11,All, pop, Date) %>% 
    #exclude data during industrial action
    na.omit() %>%
    #calculate rates
    mutate(rate=All*10000/pop) %>% 
    #obtain median and interquartile range by SA2 name
    group_by(SA2_NAME11) %>% 
    summarise(Median=format(round(quantile(rate, probs=0.5),1), nsmall=1),
              "Interquartile range"= paste0(format(round(quantile(rate, probs=0.25),1),nsmall=1),"-" , format(round(quantile(rate, probs=0.75),1),nsmall=1)))



```

Reusability
========================================================
* Always try to write 'pretty' code
* Think about naming of datasets and variables 
* Try to write functions for repetitive work

Efficiency
========================================================

<img src="https://csgillespie.github.io/efficientR/figures/f0_web.png" width="60%">

Efficiency
========================================================

* Efficient programming
* Efficient workflow
* Efficient input/output
* Efficient data carpentry
* Efficient optimisation

House keeping
========================================================
* Install R and Rstudio
* Install package: knit,ggplot2, dplyr, tidyr
* Download Github study material from: https://github.com/CarolineXGao/SPHPM_R_group (use the Clone or download button).
* There are some additional study materials provided in Part 1 (coursea video lectures, swirl etc) feel free to get started before next week




Happy coding
========================================================
$~$

![Alt Text](https://78.media.tumblr.com/61b853de39924e1bf261ff26f363a98e/tumblr_inline_o539xbgPGh1ssbz72_500.gif)